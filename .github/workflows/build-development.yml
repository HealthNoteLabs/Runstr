name: Build and Release Development APK

on:
  push:
    branches:
      - development-consolidated
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    name: Build and Release Development APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      # Extract version from package.json
      - name: Get Version from package.json
        id: package_version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      # Generate timestamp for uniqueness
      - name: Generate Timestamp
        id: timestamp
        run: echo "DATE=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      # Generate release tag dynamically
      - name: Generate Release Tag
        id: release_tag
        run: echo "RELEASE_TAG=development-${{ env.VERSION }}-${{ env.DATE }}" >> $GITHUB_ENV

      # Build the React app
      - name: Build React app
        run: npm run build

      # Install Capacitor CLI if not installed globally
      - name: Install Capacitor CLI
        run: npm install -g @capacitor/cli

      # Sync React build with Android platform
      - name: Sync Capacitor with Android
        run: npx cap sync android

      # Setup Java for Android build
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Setup Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # Grant execute permissions for Gradle wrapper
      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./android/gradlew

      # Build Debug APK (suitable for testing and distribution)
      - name: Build Debug APK
        run: cd android && ./gradlew assembleDebug

      # Create a Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: 'Development Release ${{ env.RELEASE_TAG }}'
          body: |
            ðŸš€ **Development Release v${{ env.VERSION }}**
            
            This release includes:
            - âœ… Complete feed functionality 
            - âœ… Full team features (NIP-29 teams, local chat, leaderboards)
            - âœ… Run tracking with GPS and activity modes
            - âœ… Wallet integration (NWC, Lightning)
            - âœ… Music integration with Wavlake
            - âœ… Events and achievements system
            
            **Installation:**
            Download the `runstr-v${{ env.VERSION }}.apk` file and install on your Android device.
            
            **Note:** This is a development release with consolidated features. Enable "Install from unknown sources" in Android settings.
            
            Built from branch: `development-consolidated`
            Commit: ${{ github.sha }}
          draft: false
          prerelease: false

      # Upload Release APK to Release with proper naming
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: android/app/build/outputs/apk/debug/app-debug.apk
          asset_name: runstr-v${{ env.VERSION }}.apk
          asset_content_type: application/vnd.android.package-archive