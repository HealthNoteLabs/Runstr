name: Build APK for New-Features

on:
  push:
    branches:
      - new-features
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Add explicit permission to create releases
    steps:
      - uses: actions/checkout@v4
       
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
          
      - name: Setup Environment Variables
        run: |
          echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
          echo "DATE=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV
          
      - name: Install Dependencies
        run: npm ci
        
      # Generate release tag dynamically
      - name: Generate Release Tag
        id: release_tag
        run: echo "RELEASE_TAG=new-features-${{ env.VERSION }}-${{ env.DATE }}" >> $GITHUB_ENV
        
      # Build the React app
      - name: Build React app
        run: npm run build
        
      # Initialize Capacitor (creates the Android project if needed)
      - name: Initialize Capacitor
        run: |
          npx cap sync android
      
      # Ensure gradlew is executable
      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew
        
      # Build Android Debug APK
      - name: Build Debug APK
        run: |
          cd android
          ./gradlew assembleDebug --stacktrace
      
      # Upload APK as artifact for easy download from GitHub Actions
      - name: Upload Debug APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk
      
      # Verify APK exists before creating release
      - name: Verify APK exists
        run: |
          ls -la android/app/build/outputs/apk/debug/
          echo "APK file exists, preparing for release with tag: ${{ env.RELEASE_TAG }}"
          
      # Create GitHub Release using GitHub CLI directly
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Creating release with tag: ${{ env.RELEASE_TAG }}"
          gh release create "${{ env.RELEASE_TAG }}" \
            --title "New Features Build ${{ env.RELEASE_TAG }}" \
            --notes "Automated build from new-features branch" \
            --prerelease \
            android/app/build/outputs/apk/debug/app-debug.apk 