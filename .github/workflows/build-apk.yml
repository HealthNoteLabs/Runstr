name: Build and Release Simple-updates Debug Apk

on:
  push:
    branches:
      - Simple-updates
      - feed  # Added feed branch to automatically trigger the workflow
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write  # This is crucial for creating releases

jobs:
  build:
    name: Build and Release Debug Apk
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      # Extract version from package.json
      - name: Get Version from package.json
        id: package_version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      # Generate timestamp for uniqueness
      - name: Generate Timestamp
        id: timestamp
        run: echo "DATE=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      # Generate release tag dynamically
      - name: Generate Release Tag
        id: release_tag
        run: echo "RELEASE_TAG=feed-${{ env.VERSION }}-${{ env.DATE }}" >> $GITHUB_ENV

      # Build the React app
      - name: Build React app
        run: npm run build

      # Install Capacitor CLI if not installed globally
      - name: Install Capacitor CLI
        run: npm install -g @capacitor/cli

      # Sync React build with Android platform
      - name: Sync Capacitor with Android
        run: npx cap sync android

      # Setup Java for Android build
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Setup Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # Grant execute permissions for Gradle wrapper
      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./android/gradlew

      # Build Debug APK
      - name: Build Debug APK
        run: cd android && ./gradlew assembleDebug

      # Upload APK as an artifact first (so we have a backup)
      - name: Upload APK artifact
        uses: actions/upload-artifact@v2  # Downgraded to v2 which is more stable
        with:
          name: app-debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 30

      # Rename the APK to include version and date
      - name: Rename APK
        run: |
          mkdir -p ./releases
          cp android/app/build/outputs/apk/debug/app-debug.apk ./releases/runstr-feed-${{ env.VERSION }}-${{ env.DATE }}.apk

      # Create a Release using updated syntax
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: ./releases/runstr-feed-${{ env.VERSION }}-${{ env.DATE }}.apk
          name: 'Feed Fix ${{ env.VERSION }}-${{ env.DATE }}'
          tag_name: ${{ env.RELEASE_TAG }}
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}