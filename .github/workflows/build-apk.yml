name: Build and Release APK

on:
  push:
    branches:
      - Simple-updates
      - feed
      - refresh
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Generate version and tag
        run: |
          VERSION=$(jq -r .version package.json)
          TIMESTAMP=$(date +"%Y%m%d%H%M%S")
          TAG="release-$VERSION-$TIMESTAMP"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "Generated VERSION=$VERSION, TIMESTAMP=$TIMESTAMP, TAG=$TAG"

      - name: Install dependencies
        run: npm ci

      - name: Build React app
        run: npm run build

      - name: Install Capacitor CLI
        run: npm install -g @capacitor/cli

      - name: Sync Capacitor
        run: npx cap sync android

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Set Gradle permissions
        run: chmod +x ./android/gradlew

      - name: Build debug APK
        run: cd android && ./gradlew assembleDebug

      - name: Debug - list files
        run: |
          echo "Checking for APK files..."
          find android -name "*.apk" -type f
          echo "Workspace content:"
          ls -la
          echo "Android directory:"
          ls -la android

      - name: Copy APK to root
        run: |
          APK_SOURCE="android/app/build/outputs/apk/debug/app-debug.apk"
          APK_FILENAME="runstr-${{ env.VERSION }}-${{ env.TIMESTAMP }}.apk"
          
          echo "Checking source APK at $APK_SOURCE"
          if [ -f "$APK_SOURCE" ]; then
            echo "Source APK exists, copying to $APK_FILENAME"
            cp "$APK_SOURCE" "$APK_FILENAME"
            echo "APK_FILENAME=$APK_FILENAME" >> $GITHUB_ENV
            echo "APK file copied successfully"
            ls -la "$APK_FILENAME"
          else
            echo "ERROR: Source APK not found at $APK_SOURCE"
            exit 1
          fi

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: "Runstr ${{ env.VERSION }} (${{ env.TIMESTAMP }})"
          draft: false
          prerelease: false
          body: |
            Runstr Feed App
            Version: ${{ env.VERSION }}
            Build Date: ${{ env.TIMESTAMP }}
            Branch: ${{ github.ref_name }}
            
            Download the APK file to install on your Android device.

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.APK_FILENAME }}
          asset_name: ${{ env.APK_FILENAME }}
          asset_content_type: application/vnd.android.package-archive