name: Build and Release Android APK

on:
  push:
    branches:
      - Simple-updates
      - feed
      - refresh
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build and Release APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Extract version from package.json
      - name: Get version and set variables
        id: vars
        run: |
          VERSION=$(jq -r .version package.json)
          DATE=$(date +'%Y%m%d-%H%M%S')
          RELEASE_TAG="feed-${VERSION}-${DATE}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "DATE=${DATE}" >> $GITHUB_ENV
          echo "RELEASE_TAG=${RELEASE_TAG}" >> $GITHUB_ENV

      # Build the React app
      - name: Build React app
        run: npm run build

      # Install Capacitor CLI
      - name: Install Capacitor CLI
        run: npm install -g @capacitor/cli

      # Sync with Android
      - name: Sync Capacitor with Android
        run: npx cap sync android

      # Setup Java
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      # Setup Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # Fix permissions for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x ./android/gradlew

      # Debug - List all relevant directories
      - name: Debug - List directories
        run: |
          ls -la ./android
          ls -la ./android/app
          ls -la ./android/app/build 2>/dev/null || echo "Build directory doesn't exist yet"

      # Build Debug APK
      - name: Build Debug APK
        run: cd android && ./gradlew assembleDebug --stacktrace

      # Debug - Find APK
      - name: Find APK files
        run: find android -name "*.apk" -type f

      # Prepare APK with proper name
      - name: Prepare APK file
        run: |
          APK_SOURCE="android/app/build/outputs/apk/debug/app-debug.apk"
          APK_DEST="runstr-feed-${{ env.VERSION }}-${{ env.DATE }}.apk"
          
          if [ -f "$APK_SOURCE" ]; then
            cp "$APK_SOURCE" "$APK_DEST"
            echo "APK_PATH=$APK_DEST" >> $GITHUB_ENV
            echo "APK prepared successfully at $APK_DEST"
          else
            echo "ERROR: APK file not found at $APK_SOURCE"
            find android -name "*.apk" -type f
            exit 1
          fi

      # Create GitHub Release with the APK
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ env.APK_PATH }}"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.RELEASE_TAG }}
          name: "Runstr Feed ${{ env.VERSION }}"
          body: |
            ## Runstr Feed App
            
            **Version:** ${{ env.VERSION }}
            **Build Date:** ${{ env.DATE }}
            **Branch:** ${{ github.ref_name }}
            
            Download the APK file to install directly on your Android device.
          draft: false
          prerelease: false